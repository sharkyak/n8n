services:
  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: unless-stopped
    # command: ["start", "--tunnel"]
    # ports:
    #   - 5678:5678
    environment:
      - TZ=Asia/Bangkok
      - N8N_SECURE_COOKIE=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - N8N_PROTOCOL=https
      - N8N_PROXY_HOPS=1
      - N8N_PAYLOAD_SIZE_MAX=64
      - N8N_METRICS=true
      - N8N_HOST=n8n.domain.com
      - WEBHOOK_URL=https://n8n.domain.com/
      - NODE_ENV=production
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - n8n_data:/home/node/.n8n
  
  postgres:
    image: postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - npm_data:/data
      - letsencrypt:/etc/letsencrypt

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    # ports:
    #   - '8080:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  
  node_exporter:
    image: prom/node-exporter
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    volumes:
      - '/:/host:ro,rslave'
  
  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    # ports: 
    #   - '9090:9090'
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.retention.size=5GB'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  grafana:
    image: grafana/grafana
    restart: unless-stopped
    # ports:
    #   - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  n8n_data:
  postgres_data:
  npm_data:
  letsencrypt:
  pgadmin_data:
  prometheus_data:
  grafana_data:
